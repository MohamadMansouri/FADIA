[General]
#*.width = 30
#*.height = 30

# random numbers
seed-0-mt=532569

# status
**.hasStatus = false

#display
#**.displayEnergyStorages = true

#stats
*.prover[*].**.scalar-recording = false
**.vector-recording = false
*.collector[*].collectorapp.elapsedtimesig:last.scalar-recording =true
*.prover[*].proverapp.reportsent:vector.vector-recording =false
*.prover[*].proverapp.energyStorage:vector.vector-recording =false

# power
#*.prover[*].energyStorage.typename = "SimpleEpEnergyStorage"
#*.prover[*].energyConsumer.typename = "StateBasedEpEnergyConsumer"
#*.prover[*].energyManagement.typename = "SimpleEpEnergyManagement"
#*.prover[*].energyStorage.nominalCapacity = 0.05J
#*.prover[*].energyManagement.nodeShutdownCapacity = 0J
#*.prover[*].energyManagement.nodeStartCapacity = 0.025J
#*.prover[*].energyStorage.initialCapacity = uniform(0J, this.nominalCapacity)
#*.prover[*].energyGenerator.typename = "AlternatingEpEnergyGenerator"
#*.prover[*].energyGenerator.energySinkModule = "^.energyStorage"
#*.prover[*].energyGenerator.powerGeneration = 1mW
#*.prover[*].energyGenerator.sleepInterval = exponential(10s)
#*.prover[*].energyGenerator.generationInterval = exponential(10s)

#mobility
#**.constraintAreaMinX = 0m
#**.constraintAreaMinY = 10m
#**.constraintAreaMinZ = 0m
#**.constraintAreaMaxX = ${width}m
#**.constraintAreaMaxY = ${height}m
#**.constraintAreaMaxZ = 0m

#*.prover[*].mobility.typename = "RandomWaypointMobility"
#*.prover[*].mobility.typename = "StationaryMobility"
#*.prover[*].mobility.numHosts = ${nprover=100}
#*.prover[*].mobility.speed = uniform(20mps,50mps)


#range of communication of prover = 55m
*.prover[*].range = 55

[Config Fadia-tree]
#10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000, 20000..100000 step 20000, 400000
network = Fadiatree
*.numCollectors = 1
*.numProvers = ${nprover=10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000, 20000..100000 step 20000}
#*.numProvers = ${nprover=100000}
*.keyRingSize = 1
*.keyPoolSize = 1
*.neighbors = ${degree=2, 4, 8}
#*.neighbors = ${degree=8}
*.prover[*].neighbors = ${degree}

[Config Fadia-chain]
#10, 20, 40, 100, 1000, 5000, 10000, 50000 100000, 300000, 600000, 1000000
network = Faidachain
*.numCollectors = 1
*.numProvers = ${nprover=10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000}
*.keyRingSize = 1
*.keyPoolSize = 1
*.neighbors = 2
*.prover[*].neighbors = 2

[Config Fadia-ring]
#10, 20, 40, 100, 1000, 5000, 10000, 50000 100000, 300000, 600000, 1000000
network = Fadiaring
*.numCollectors = 1
*.numProvers = ${nprover=10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000}
*.keyRingSize = 1
*.keyPoolSize = 1
*.neighbors = 2
*.prover[*].neighbors = 2

[Config Fadia-star]
#10, 20, 40, 100, 1000, 5000, 10000, 50000 100000, 300000, 600000, 1000000
network = Fadiastar
*.numCollectors = 1
*.numProvers = ${nprover=10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000, 20000..100000 step 20000}
#*.numProvers = ${nprover=20000..100000 step 20000}
*.keyRingSize = 1
*.keyPoolSize = 1
*.neighbors = 4
*.prover[*].neighbors = 4
