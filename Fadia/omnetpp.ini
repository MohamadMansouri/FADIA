[General]

# random numbers
seed-0-mt=2


#display
**.displayEnergyStorages = false

#stats
*.prover[*].**.scalar-recording = false
#**.vector-recording = false
**.keyrevokedsig:vector.vector-recording= false
*.collector[*].collectorapp.elapsedtimesig:last.scalar-recording =false
*.collector[*].collectorapp.reportsize:vector.vector-recording = true
*.prover[*].proverapp.reportsent:vector.vector-recording =false
*.prover[*].proverapp.datasent:vector.vector-recording =false
*.prover[*].proverapp.datarcvd:vector.vector-recording =false
*.prover[*].proverapp.crashtime:vector.vector-recording =true
*.prover[*].proverapp.energyStorage:vector.vector-recording = true

[Config Fadia]
#10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000, 20000..100000 step 20000, 400000
network = Fadia
*.numCollectors = 1
*.numProvers = ${nprover=10, 25, 50, 100, 150, 250,350, 500}
#*.numProvers = ${nprover=10}
*.keyRingSize = ${ringsize = 100}
*.keyPoolSize = ${poolsize = 10000, 100000 ! ringsize}
*.statadapt = ${fair=false}
*.prover[*].type = index() % 2 + 2
#*.drop = ${pdrop=1,2,3,4,5}

# power
# status
#**.hasStatus = true
#*.prover[*].energyStorage.typename = "SimpleEpEnergyStorage"
##*.prover[*].energyStorage.nominalCapacity = 21600J
#*.prover[*].energyStorage.nominalCapacity = 1000J
##*.prover[*].energyStorage.initialCapacity = ${bdist=uniform(100J, this.nominalCapacity)}}
#*.prover[*].energyStorage.initialCapacity = ${bdist=uniform(100J, this.nominalCapacity),truncnormal(500J, 200J),pareto_shifted(0.5, 8J,0J), 1000J - pareto_shifted(0.5, 8J,0J)}


*.width = ${width = 300}
*.height = ${height = 300}


#mobility
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = ${width}m
**.constraintAreaMaxY = ${height}m
**.constraintAreaMaxZ = 0m

*.prover[*].mobility.typename = ${mobility="RandomWaypointMobility"}
#*.prover[*].mobility.typename = ${mobility="StationaryMobility"}
*.prover[*].mobility.speed = uniform(1mps,2mps)
*.prover[*].aggsize = ${aggsize=1,999999}


#range of communication of prover = 55m
*.prover[*].range = 55



[Config Fadia-selfish]

network = Fadiaselfish
*.numCollectors = 1 
*.numProvers = 500

*.keyRingSize = 300
*.keyPoolSize = 100000

*.maxdepth = 5

*.prover[*].type = 2
*.statadapt = ${fair=true}


*.width = ${width = 300}
*.height = ${height = 300}

# power
**.hasStatus = true
*.prover[*].energyStorage.typename = "SimpleEpEnergyStorage"
*.prover[*].energyStorage.nominalCapacity = 1000J
*.prover[*].energyStorage.initialCapacity = ${bdist=uniform(100J, this.nominalCapacity)}


#mobility
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = ${width}m
**.constraintAreaMaxY = ${height}m
**.constraintAreaMaxZ = 0m
*.prover[*].mobility.typename = ${mobility="StationaryMobility"}
#*.prover[*].mobility.speed = uniform(1mps,2mps)



#range of communication of prover = 55m
*.prover[*].range = 55



[Config Fadia-tree]
#10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000, 20000..100000 step 20000, 400000
network = Fadiatree
*.numCollectors = 1
#*.numProvers = ${nprover=10, 100, 1000, 2000, 4000, 8000, 10000, 17000}
#*.numProvers = ${nprover=100000}
*.numProvers = ${nprover=10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000, 20000..100000 step 20000,  200000..900000 step 200000, 1000000 }

*.keyRingSize = 30
*.keyPoolSize = 31
*.neighbors = ${degree=2, 4, 8}
#*.neighbors = ${degree=20}
*.prover[*].neighbors = ${degree}
*.maxdepth = 9999
*.prover[*].type = index() % 2 + 2


[Config Fadia-tree-fair]
#10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000, 20000..100000 step 20000, 400000
network = Fadiatreefair
*.numCollectors = 1
*.numProvers = ${nprover=10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000 }
#*.numProvers = ${nprover=100,8000, 10000}
*.keyRingSize = 300
*.keyPoolSize = 301
#*.neighbors = ${degree=2, 4, 8}
*.neighbors = ${degree=20}
*.prover[*].neighbors = ${degree}
*.maxdepth = 9999
*.prover[*].type = index() % 2 + 2



[Config Fadia-chain]
#10, 20, 40, 100, 1000, 5000, 10000, 50000 100000, 300000, 600000, 1000000
network = Faidachain
*.numCollectors = 1
*.numProvers = ${nprover=10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000}
*.keyRingSize = 300
*.keyPoolSize = 301
*.neighbors = 2
*.maxdepth = 9999
*.prover[*].neighbors = 2

[Config Fadia-ring]
#10, 20, 40, 100, 1000, 5000, 10000, 50000 100000, 300000, 600000, 1000000
network = Fadiaring
*.numCollectors = 1
*.numProvers = ${nprover=10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000}
*.keyRingSize = 300
*.keyPoolSize = 301
*.neighbors = 2
*.maxdepth = 9999
*.prover[*].neighbors = 2

[Config Fadia-star]
#10, 20, 40, 100, 1000, 5000, 10000, 50000 100000, 300000, 600000, 1000000
network = Fadiastar
*.numCollectors = 1
*.numProvers = ${nprover=10, 20..100 step 20, 200..1000 step 200, 2000..10000 step 2000, 20000..100000 step 20000}
#*.numProvers = ${nprover=20000..100000 step 20000}
*.keyRingSize = 300
*.keyPoolSize = 301
*.neighbors = 4
*.maxdepth = 9999
*.prover[*].neighbors = 4
